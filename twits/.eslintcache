[{"D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\index.js":"1","D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\app\\index.js":"2","D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\app\\app.js":"3","D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\app-header\\index.js":"4","D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\app-header\\app-header.js":"5","D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\search-panel\\index.js":"6","D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\search-panel\\search-panel.js":"7","D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\post-status-filter\\index.js":"8","D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\post-status-filter\\post-status-filter.js":"9","D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\post-list\\index.js":"10","D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\post-list\\post-list.js":"11","D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\post-list-item\\index.js":"12","D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\post-list-item\\post-list-item.js":"13","D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\post-add-form\\index.js":"14","D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\post-add-form\\post-add-form.js":"15"},{"size":229,"mtime":1608984638046,"results":"16","hashOfConfig":"17"},{"size":44,"mtime":1608817121673,"results":"18","hashOfConfig":"17"},{"size":4984,"mtime":1609061398608,"results":"19","hashOfConfig":"17"},{"size":64,"mtime":1608812607011,"results":"20","hashOfConfig":"17"},{"size":635,"mtime":1609005577993,"results":"21","hashOfConfig":"17"},{"size":70,"mtime":1608812747623,"results":"22","hashOfConfig":"17"},{"size":738,"mtime":1609014226991,"results":"23","hashOfConfig":"17"},{"size":85,"mtime":1608812986934,"results":"24","hashOfConfig":"17"},{"size":980,"mtime":1609061554043,"results":"25","hashOfConfig":"17"},{"size":61,"mtime":1608813223979,"results":"26","hashOfConfig":"17"},{"size":1065,"mtime":1609006216994,"results":"27","hashOfConfig":"17"},{"size":74,"mtime":1608833211235,"results":"28","hashOfConfig":"17"},{"size":1510,"mtime":1609004929100,"results":"29","hashOfConfig":"17"},{"size":70,"mtime":1608813998571,"results":"30","hashOfConfig":"17"},{"size":1230,"mtime":1609008983014,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"a30vcz",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\index.js",[],["66","67"],"D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\app\\index.js",[],"D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\app\\app.js",["68"],"import React, { Component } from 'react';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n\r\nimport './app.css';\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst AppBlock = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 800px;\r\n`\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : [\r\n                2,\r\n                \"dadsa\",\r\n                {label:\"Going to learn React\", important: true, like: false, id: \"fdafsdsfsdfgsd\"},\r\n                {label:\"That is so good\", important: false, like: false, id: \"fdafsdsfsd\"},\r\n                {label:\"I need a break...\", important: false, like: false, id: \"fdasgfdsd\"}\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        }\r\n    }\r\n    deleteItem = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex((el) => el.id === id);\r\n\r\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    addItem = (body) => {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            like: false,\r\n            id: this.passwordGen()\r\n        }\r\n\r\n        const {data} = this.state;\r\n\r\n        while(data.findIndex((el) => el.id === newItem.id) !== -1){\r\n            newItem.id = this.passwordGen();\r\n        }\r\n\r\n        console.log(newItem.id)\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem]\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    passwordGen = () => {\r\n        const passwordLength = ~~(Math.random() * 2 + 4);\r\n            const digits = '0123456789abcdefghijklmnopqrstuvwxyzQWERTYUIOPASDFGHJKLZXCVBNM';\r\n        let password = '';\r\n        while (password.length <= passwordLength) {\r\n            password += digits[~~(Math.random() * digits.length)];\r\n        }\r\n        return password;\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex((el) => el.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data : newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleLiked = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex((el) => el.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data : newArr\r\n            }\r\n        })\r\n    }\r\n\r\n     isEmpty = (obj) => {\r\n        for(let key in obj)\r\n        {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0 ) {\r\n            return items\r\n        }\r\n        return items.filter((el) => {\r\n            return el.label.indexOf(term) !== -1\r\n        })\r\n    }\r\n\r\n    onUpdateSearch = (term) => {\r\n        this.setState({term})\r\n    }\r\n\r\n\r\n    filterPost = (items, filter) => {\r\n        switch (filter) {\r\n            case \"like\":\r\n                return items.filter(item => item.like);\r\n            case \"important\":\r\n                return items.filter(item => item.important);\r\n        }\r\n        return items\r\n    }\r\n\r\n    onFilterSelect = (filter) => {\r\n        this.setState({filter})\r\n    }\r\n\r\n    render() {\r\n        const {data, term, filter} = this.state;\r\n\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.filter((item) => typeof item === 'object' && this.isEmpty(item))\r\n\r\n        const visiblePosts = this.filterPost(this.searchPost(allPosts, term), filter)\r\n\r\n        return (\r\n            <AppBlock>\r\n                    <AppHeader\r\n                liked={liked}\r\n                allPosts={allPosts.length}/>\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                    onUpdateSearch={this.onUpdateSearch}/>\r\n                    <PostStatusFilter\r\n                    filter={filter}\r\n                    onFilterSelect={this.onFilterSelect}\r\n                    />\r\n                </div>\r\n                <PostList\r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}/>\r\n                <PostAddForm\r\n                onAdd={this.addItem}/>\r\n            </AppBlock>\r\n        )\r\n    }\r\n}\r\n\r\n","D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\app-header\\index.js",[],"D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\app-header\\app-header.js",[],"D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\search-panel\\index.js",[],"D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\search-panel\\search-panel.js",[],"D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\post-status-filter\\index.js",[],"D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\post-status-filter\\post-status-filter.js",[],"D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\post-list\\index.js",[],"D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\post-list\\post-list.js",["69"],"\r\nimport React from 'react';\r\n\r\nimport PostListItem from '../post-list-item';\r\nimport { ListGroup } from 'reactstrap';\r\nimport './post-list.css'\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n\r\n    const elements = posts.map( (item) => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key = {id} className='list-group-item'>\r\n                <PostListItem\r\n                    {...itemProps}\r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleLiked={() => onToggleLiked(id)}/>\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <ListGroup className=\"app-list\">\r\n            {elements}\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nexport default PostList;","D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\post-list-item\\index.js",[],"D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\post-list-item\\post-list-item.js",[],["70","71"],"D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\post-add-form\\index.js",[],"D:\\WebStorm 2020.1.3\\Learn\\twits\\src\\components\\post-add-form\\post-add-form.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":131,"column":9,"nodeType":"78","messageId":"79","endLine":136,"endColumn":10},{"ruleId":"80","severity":1,"message":"81","line":10,"column":40,"nodeType":"82","messageId":"83","endLine":10,"endColumn":42},{"ruleId":"72","replacedBy":"84"},{"ruleId":"74","replacedBy":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["86"],["87"],"no-global-assign","no-unsafe-negation"]